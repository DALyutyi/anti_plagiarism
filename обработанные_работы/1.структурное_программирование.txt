федеральный государственный бюджетный образовательный учреждение высокий образование мордовский государственный педагогический университет имя евсевьев факультет физико математический кафедра физика информационный технология методика обучение реферат структурный программирование автор работа лемайкина направление подготовка педагогический образование профиль физика информатика руководитель работа канд пед наука доцент кормилицын оценка саранск оглавление введение основной критерий оценка качество программа эвм нисходящий проектирование процедура функция параметр подпрограмма управление последовательность вызов подпрограмма структура подпрограмма формальный фактический параметр метод тип структурный программирование структурный оператор заключение введение структурный программирование это технология создание программа позволять путём соблюдение определённый правило уменьшить время разработка количество ошибка также облегчить возможность модификация программа процессор электронный вычислительный машина уметь выполнять лишь простейшее команда какой образ компьютер решать сложный задача обработка информация решение этот задача программист должный составить подробный описание последовательность действие который необходимо выполнить центральный процессор компьютер составление такой пошаговый описание процесс решение задача называться алгоритмизация алгоритм называться конечный набор правило расположить определённый логический порядок позволять исполнитель решать любой конкретный задача некоторый класс однотипный задача разный ситуация роль исполнитель выступать электронный какой либо иной устройство человек создание средний размер приложение использоваться структурный программирование идея который заключаться структура программа должный отражать структура решать задача алгоритм решение ясно видный исходный текст иметь средство создание программа помощь три простой оператор помощь средство точно отражать конкретный структура алгоритм цель программирование ввести понятие подпрограмма набор оператор выполнять нужный действие зависеть другой часть исходный код комбинировать подпрограмма удаваться формировать итоговый алгоритм простой оператор закончить блок код иметь определённый смысловой нагрузка причём обращаться такой блок название история методология структурный программирование появиться следствие возрастание сложность решать компьютер задача соответственный усложнение программный обеспечение год век объём сложность программа достигнуть такой уровень интуитивный разработка программа который норма ранний время перестать удовлетворять потребность практика программа становиться слишком сложный нормально сопровождать поэтому потребоваться систематизация процесс разработка структура программа наиболее сильный критика сторона разработчик структурный подход программирование подвергнуться оператор оператор безусловный переход иметься язык программирование использование произвольный переход текст программа приводить получение запутать плохо структурировать программа текст который практически невозможно понять порядок исполнение взаимозависимость фрагмент следование принцип структурный программирование сделать текст программа довольно крупный нормально читаемый серьёзно облегчиться понимание программа появиться возможность разработка программа нормальный промышленный режим программа особый затруднение понять автор другой программист это позволить разрабатывать достаточно крупный время программный комплекс сила коллектив разработчик сопровождать комплекс течение многий год условие неизбежный ротация кадр методология структурный разработка программный обеспечение признать сам сильный формализация год слово структурный стать модный отрасль начать использовать везде появиться работа структурный проектирование структурный тестирование структурный дизайн далее общий произойти примерно самый происходить год происходить настоящий время термин объектный объектный ориентировать настоящий время сфера применение эвм чрезвычайно расшириться разработка эксплуатация программа осуществляться правило разный человек поэтому наряду эффективность первый план выдвигаться другой важный характеристика программа такой понятность хороший документированность надёжность гибкость удобство сопровождение проблема разработка программа обладать такой качество объясняться трудоёмкость процесс программирование связанный это быстрый рост стоимость программный обеспечение создание хороший программа появляться необходимость придерживаться определённый принцип определённый дисциплина программирование значительный прогресс область программирование достигаться использование называть структурный программирование появление новый технология говорить дисциплина программирование основать структурный подход связать имя известный голландский учёный дейкстра свой работа высказать предположение оператор исключить язык программирование квалификация программист обратно пропорциональный число оператор программа такой дисциплина программирование упрощать структурировать программа однако представление структурный программирование программирование использование оператор являться ошибочный например хоор определять структурный программирование систематический использование абстракция управление масса деталь способ документирование который помогать проектировать программа структурный программирование толковать проектирование написание тестирование программа соответствие заранее определённый дисциплина структурный подход программирование иметь цель снижение трудоёмкость процесс создание программный обеспечение технический задание разработка завершение эксплуатация означать необходимость единый дисциплина стадия разработка программа понятие структурный подход программирование обычно включать нисходящий метод разработка программа принцип сверху вниз собственно структурный программирование называть сквозной структурный контроль основной цель структурный программирование являться уменьшение трудность тестирование доказательство правильность программа это особенно важно разработка больший программный система опыт применение метод структурный программирование разработка ряд сложный операционный система показывать правильность логический структура система поддаваться доказательство сам программа допускать достаточно полный тестирование результат готовый программа встречаться тривиальный ошибка кодирование который легко исправляться структурный программирование улучшать ясность читабельность программа программа который написать использование традиционный метод особенно который перегрузить оператор иметь хаотичный структура структурировать программа иметь последовательный организация поэтому возможно читать такой программа сверху донизу перерыв структурный программирование призвать улучшить эффективность программа основной критерий оценка качество программа эвм известно алгоритм реализовать эвм различный способ составить несколько различный программа решающий один задача такой образ нужно иметь некоторый критерий оценка программа помощь который судить насколько один программа анализ оценка программа носить преимущественно качественный характер программа работать решать поставить задача понятно этот характеристика программа являться сам важный связь это каждый программа должный устроить проверить правильность получить результат такой проверка проводиться процесс отладка программа определённый набор входной данные который заранее известный ответ отладка доказать лишь наличие ошибка программа доказать правильность программа возможный вычисление реализовать помощь связь это необходимый разработка метод аналитический верификация программа аналитический доказательство правильность программа требоваться программа легко анализироваться это означать программа должный устроить понять какой образ помощь получаться данный ответ минимальный время затрачивать тестирование отладка программа тестирование отладка программа необходимый этап процесс решение задача эвм занимать треть половина время разработка программа поэтому очень важно уменьшить время затрачивать тестирование отладка тестирование отладка программа облегчаться программа просто анализироваться снабдить необходимый комментарий облегчать понимание хороший комментарий мочь ускорить процесс отладка понимание отладка программа облегчаться иметь простой ясный структура частность ограничить использование оператор передача управление перегруженность программа этот оператор приводить хаотический структура затруднять отладка важный принцип использование мнемонический обозначение переменный язык программирование представлять вполне достаточный возможность хороший понимание программа необходимо использовать мнемоник отражать физический математический экономический смысл переменный например скорость уменьшение затрата сопровождение разработать отладить программа предназначить многократный использование эксплуатация правило заниматься разработчик другой программист входящий называть группа сопровождение программист сопровождать программа часто приходиться продолжать отладка программа производить модернизация связь изменение технический задание введение новый средство программный обеспечение выявление новый ошибка недоработка программа уменьшение затрата сопровождение необходимо каждый разработчик учитывать сложность сопровождение следовать разрабатывать отлаживать оформлять программа учёт быть использовать сопровождать другой программист гибкость программа разработать программа обычно находиться эксплуатация длительный время это время мочь измениться требование решать задача технический задание требование программа появляться необходимость внести определённый изменение программа некоторый случай бывать трудно сделать разработчик предусмотреть такой возможность хороший программа должный допускать модификация уменьшение затрата разработка программирование являться коллективный труд состав группа программист работать решение дать задача какой либо причина измениться поэтому проектирование разработка программа должный вестись такой образ возможно необходимость передать завершение другой программист несоблюдение требование часто приводить срыву срок сдача программа эксплуатация простота эффективность программа должный просто организовать это проявляться структура программа использование простой наиболее естественный средство язык программирование предпочтение простой структура данные эффективность программа считаться один главный характеристика поэтому часто ущерб другой качество программа разработчик прибегать сложный ухищрение уменьшить объём использовать память сократить время выполнение программа многий случай затрачивать это усилие оправдывать разумный подход повышение эффективность программа состоять выявить наиболее узкий место постараться улучшить нисходящий проектирование наличие подпрограмма позволять вести проектирование разработка приложение сверху вниз подход называться нисходящий проектирование сначала выделяться несколько подпрограмма решающий самый глобальный задача например инициализация данные главный часть завершение каждый этот модуль детализироваться низкий уровень разбиваться очередь небольшой число другой подпрограмма происходить тот пора пока весь задача оказаться реализовать подход удобный позволять человек постоянно мыслить предметный уровень опускаться конкретный оператор переменный кроме появляться возможность некоторый подпрограмма реализовывать сразу временно откладывать пока быть закончить другой часть например иметься необходимость вычисление сложный математический функция выделяться отдельный подпрограмма такой вычисление реализоваться временно один оператор который просто присваивать заранее выбрать значение приложение написать отладить приступить реализация функция немаловажный небольшой подпрограмма значительно простой отлаживать существенно повышать общий надёжность весь программа очень важный характеристика подпрограмма это возможность повторный использование интегрировать система программирование поставляться больший библиотека стандартный подпрограмма который позволять значительно повысить производительность труд счёт использование чужой работа создание часто применять подпрограмма процедура функция подпрограмма бывать два вид процедура функция отличаться процедура просто выполнять группа оператор функция вдобавок вычислять некоторый значение передавать обратно главный программа возвращать значение это значение иметь определённый тип говорить функция иметь тип понятие процедура иметься функция никакой значение функция вычислять считаться возвращать значение тип никакой параметр подпрограмма работа подпрограмма иметь смысл получить дать внешний программа который подпрограмма вызывать дать передаваться подпрограмма вид параметр аргумент который обычно описываться заголовок переменный управление последовательность вызов подпрограмма подпрограмма вызываться правило путём простой запись название нужный параметр бейсик оператор явный указание происходить вызов подпрограмма подпрограмма активизироваться момент вызов оператор находиться внутри подпрограмма выполняться этот подпрограмма явно вызвать пока выполнение подпрограмма полностью закончиться оператор главный программа следующий команда вызов подпрограмма выполняться подпрограмма мочь вложить допускаться вызов подпрограмма главный программа любой другой подпрограмма некоторый язык программирование допускаться вызов подпрограмма сам приём называться рекурсия потенциально опасный привести зацикливание бесконечный самовызов структура подпрограмма подпрограмма состоять несколько часть заголовок параметр тело подпрограмма оператор который быть выполняться вызов завершение подпрограмма локальный переменный объявить внутри подпрограмма иметь область действие тело функция бейсик паскаль заголовок функция имя список параметр тип возвращать значение определяться специальный символ имя функция имя тип функция функция тело последовательность оператор последовательность оператор завершение завершение процедура бейсик паскаль заголовок процедура имя имя тело последовательность последовательность оператор завершение формальный фактический параметр время создание подпрограмма заранее известно какой конкретно параметр получать поэтому качество переменный выступать роль аргумент заголовок мочь использоваться произвольный допустимый название совпадать иметься компилятор равно понять это один параметр который указываться заголовок подпрограмма называться формальный нужный описание тело подпрограмма параметр конкретный значение который указываться момент вызов подпрограмма называться фактический параметр выполнение оператор подпрограмма формальный параметр временно замениться фактический пример программа вызывать функция один фактический параметр внутри подпрограмма формальный параметр получать значение переменный возводиться квадрат результат возвращаться обратно программа присваиваться переменный метод тип структурный программирование основный метод структурный программирование относиться прежде отказ бессистемный употребление оператор преимущественный использование другой структурировать оператор метод нисходящий проектирование разработка программа идея пошаговый детализация некоторый другой соглашение касаться дисциплина программирование всякий программа соответствие структурный подход программирование построить использование три основный тип блок функциональный блок который блок схема изображаться вид прямоугольник один вход один выход функциональный блок язык программирование соответствовать оператор ввод вывод любой оператор присваивание вид функциональный блок изобразить любой последовательность оператор выполняться другой иметь вход выход условный конструкция блок включать проверка некоторый логический условие зависимость который выполняться либо либо оператор язык практикум иначе блок обобщённый цикл блок обеспечивать многократный повторение выполнение оператор пока выполнить логический условие язык практикум цикл реализоваться способ цикл параметр цикл предусловие пока конструирование программа использование рассмотреть тип блок блок образовать линейный цепочка выход один блок подсоединяться вход следующий такой образ программа иметь линейный структура причём порядок следование блок соответствовать порядок который выполняться такой структура значительно облегчать чтение понимание программа также упрощать доказательство правильность линейный цепочка блок свести один блок любой программа конечный итог рассматриваться единый функциональный блок вход один выход проектирование написание программа нужно выполнить обратный преобразование блок разбить последовательность подблок затем каждый подблок разбить последовательность мелкий блок тот пора пока быть получить атомарный блок рассмотреть выше тип метод конструирование программа принять называть нисходящий сверху вниз нисходящий метод конструирование алгоритм программа первоначально рассматриваться весь задача целое каждый последующий этап задача разбиваться мелкий подзадача каждый подзадача конечный итог мелкий подзадача тот пора пока быть получить такой подзадача который легко кодироваться выбрать язык программирование каждый шаг уточняться новый новый деталь пошаговый детализация процесс нисходящий проектирование сохраняться строгий дисциплина программирование разбиение подзадача осуществляться путём применение рассмотреть тип конструкция функциональный блок условный конструкция обобщённый цикл поэтому конечный итог получаться структурировать программа язык практикум последовательный детализация реализовать вид вспомогательный алгоритм подпрограмма процедура функция нач вспомогательный алгоритм кон алг вспомогательный алгоритм дать нач кон настоящий время помощь структурный подход прораммирование появиться новый направление объектный программирование отменять дополнять принцип структурный подход позволять разрабатывать модернизировать программный код малый затрата время распределять задача программирование больший количество программист структурный оператор основный идея структурный программирование заключаться существовать четыре структурный оператор использовать структурный оператор построить сколь угодный сложный программа первый структурный оператор называться линейный цепочка оператор любой задача разбитый несколько подзадача выполнение подзадача поручить подпрограмма название который нужно отразить подзадача который должный решать этот подпрограмма момент написание алгоритм программа верхний уровень интересовать поэтому вместо настоящий подпрограмма поставить подпрограмма заглушка второй структурный оператор называться условный оператор достаточно часто один другой задача должный исполняться зависимость определённый условие который зависеть результат выполнение предыдущий программа внешний устройство каждый такой задача называться плечо условный оператор условный оператор использоваться неполный вариант один плечо алгоритм отсутствовать третий структурный оператор это оператор цикл проверка условие тело цикл оператор легко реализоваться язык программирование ассемблер помощь команда условный безусловный переход отличие условный оператор заключаться передача управление осуществляться вперёд назад язык программирование высокий уровень оператор входить состав язык оператор язык программирование оператор язык программирование четвёртый структурный оператор это оператор цикл проверка условие тело цикл отличие предыдущий оператор тело цикл оператор раз выполниться условие цикл сразу выполнить оператор условный оператор невозможно реализовать один машинный команда тип управлять структура применение управлять структура последовательность действие действие конец последовательность включать фиксировать перечень действие оператор каждый очередной действие обрабатываться завершение предыдущий дополнительный условие изменение порядок обработка блок редактироваться последовательность выполнять альтернатива условие выбор начало условие альтернатива альтернатива конец блок условие содержаться условие выбор альтернатива обработка каждый альтернатива выполняться выполнение один два альтернатива обязательно развитие данный тип структура являться множественный альтернатива последовательно проверяться условие выполнение определённый альтернатива очередной условие истинно обрабатываться соответствовать альтернатива происходить выход противный случай переход проверка условие следующий альтернатива один условие выполниться происходить выход цикл пока начало условие тело цикл конец блок условие задаваться условие тело цикл определённый обработка условие выполняться цикл прерываться осуществляться выход условие содержать счётчик повторение тело цикл либо логический условие тело цикл произвольный последовательность блок оператор обработка заключение современный этап развитие общество характеризоваться внедрение информационный технология сфера человеческий деятельность новый информационный технология оказывать существенный влияние сфера образование происходить фундаментальный изменение система образование вызвать новый понимание цель образовательный ценность также необходимость переход непрерывный образование разработка использование новый технология обучение связанный оптимальный построение реализация учебный процесс учёт гарантировать достижение дидактический цель список использовать литература